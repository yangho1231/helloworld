'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _WaitIndicator = require('./WaitIndicator');

var _WaitIndicator2 = _interopRequireDefault(_WaitIndicator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WaitFor = function (_React$Component) {
  (0, _inherits3.default)(WaitFor, _React$Component);

  function WaitFor() {
    (0, _classCallCheck3.default)(this, WaitFor);
    return (0, _possibleConstructorReturn3.default)(this, (WaitFor.__proto__ || (0, _getPrototypeOf2.default)(WaitFor)).apply(this, arguments));
  }

  (0, _createClass3.default)(WaitFor, [{
    key: 'render',
    value: function render() {
      if (this.isFetching()) {
        if (this.hasCachedData()) {
          // its entirely possible its fetching but cached data is there
          return this.renderChildren();
        } else {
          return _react2.default.createElement(_WaitIndicator2.default, { className: this.props.waitClassName || 'wait-indicator--fill' });
        }
      } else if (this.hasError()) {
        return _react2.default.createElement(
          'div',
          { className: 'callout callout--error wait-for__error' },
          _react2.default.createElement('i', { className: 'icon icon--error' }),
          this.renderErrorMessage()
        );
      }
      // its all good to render
      return this.renderChildren();
    }
  }, {
    key: 'renderErrorMessage',
    value: function renderErrorMessage() {
      var data = this.props.data;
      if (_lodash2.default.isArray(data)) {
        data = _lodash2.default.find(data, function (d) {
          return d.hasError;
        });
      }
      var message = this.props.errorMessage;
      if (!message) {
        if (data && (data.error || data.errorMessage)) {
          message = data.error || data.errorMessage;
        } else if (data && data.statusText) {
          message = data.statusText;
        }
      }
      return message;
    }
  }, {
    key: 'renderChildren',
    value: function renderChildren() {
      if (_lodash2.default.isArray(this.props.children)) {
        if (!this.props.ignoreWarnings) {
          /* eslint-disable no-console */
          console.warn('WaitFor received an array, that means we are going to wrap it in a div');
        }
        return _react2.default.createElement(
          'div',
          { className: ((this.props.className || '') + ' wait-for-wrapper').trim() },
          this.props.children
        );
      } else {
        return this.props.children;
      }
    }
  }, {
    key: 'isFetching',
    value: function isFetching() {
      var data = this.props.data;
      if (!_lodash2.default.isArray(data)) {
        data = [data];
      }
      return _lodash2.default.findIndex(data, function (datum) {
        return datum.isFetching;
      }) !== -1;
    }
  }, {
    key: 'hasError',
    value: function hasError() {
      var data = this.props.data;
      if (!_lodash2.default.isArray(data)) {
        data = [data];
      }
      return _lodash2.default.findIndex(data, function (datum) {
        return datum.hasError;
      }) !== -1;
    }
  }, {
    key: 'hasCachedData',
    value: function hasCachedData() {
      var data = this.props.data;
      if (!_lodash2.default.isArray(data)) {
        data = [data];
      }
      return _lodash2.default.findIndex(data, function (datum) {
        return !!datum.data;
      }) !== -1;
    }
  }]);
  return WaitFor;
}(_react2.default.Component);

WaitFor.propTypes = {
  data: _react2.default.PropTypes.any.isRequired,
  ignoreWarnings: _react2.default.PropTypes.bool,
  waitClassName: _react2.default.PropTypes.string,
  className: _react2.default.PropTypes.string,
  errorMessage: _react2.default.PropTypes.string,
  children: _react2.default.PropTypes.node
};
exports.default = WaitFor;