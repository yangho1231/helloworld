'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ReactCSSTransitionGroup = require('react/lib/ReactCSSTransitionGroup');

var _ReactCSSTransitionGroup2 = _interopRequireDefault(_ReactCSSTransitionGroup);

var _DropdownSelectOption = require('./DropdownSelectOption');

var _DropdownSelectOption2 = _interopRequireDefault(_DropdownSelectOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DropdownSelect = function (_React$Component) {
  (0, _inherits3.default)(DropdownSelect, _React$Component);

  function DropdownSelect() {
    var _ref;

    (0, _classCallCheck3.default)(this, DropdownSelect);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    /* eslint-disable no-console */
    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = DropdownSelect.__proto__ || (0, _getPrototypeOf2.default)(DropdownSelect)).call.apply(_ref, [this].concat(args)));

    console.warn('DropdownSelect.js is depreciated, use Dropdown.js');
    _this.onClick = _this.onClick.bind(_this);
    _this.onMouseLeave = _this.onMouseLeave.bind(_this);
    _this.onOptionClick = _this.onOptionClick.bind(_this);
    _this.onMouseEnter = _this.onMouseEnter.bind(_this);
    var defaultValue = '';
    var defaultText = '';

    var selectedOption = _this.props.options.find(function (opt) {
      return opt.selected;
    });
    if (selectedOption) {
      defaultValue = selectedOption.value;
      defaultText = selectedOption.text;
    } else if (_this.props.options.length) {
      defaultValue = _this.props.options[0].value;
      defaultText = _this.props.options[0].text;
    }

    _this.state = {
      selectedValue: defaultValue,
      selectedText: defaultText,
      showOptions: false
    };
    return _this;
  }

  (0, _createClass3.default)(DropdownSelect, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var defaultValue = '';
      var defaultText = '';

      var selectedOption = nextProps.options.find(function (opt) {
        return opt.selected;
      });
      if (selectedOption) {
        defaultValue = selectedOption.value;
        defaultText = selectedOption.text;
      } else if (this.props.options.length) {
        defaultValue = nextProps.options[0].value;
        defaultText = nextProps.options[0].text;
      }

      this.setState({
        selectedValue: defaultValue,
        selectedText: defaultText
      });
    }
  }, {
    key: 'onClick',
    value: function onClick(e) {
      e.preventDefault();
      this.setState({
        showOptions: !this.state.showOptions
      });
    }
  }, {
    key: 'onOptionClick',
    value: function onOptionClick(value) {
      var text = value;
      var foundItem = this.props.options.find(function (item) {
        return item.value === value;
      });
      if (foundItem && foundItem.text) {
        text = foundItem.text;
      }
      this.setState({
        selectedValue: value,
        selectedText: text,
        showOptions: false
      });

      if (this.props.onClick) {
        this.props.onClick(value);
      }
    }
  }, {
    key: 'onMouseEnter',
    value: function onMouseEnter() {
      if (this.mouseLeaveTimeout) {
        window.clearTimeout(this.mouseLeaveTimeout);
        delete this.mouseLeaveTimeout;
      }
    }
  }, {
    key: 'onMouseLeave',
    value: function onMouseLeave() {
      var _this2 = this;

      this.mouseLeaveTimeout = window.setTimeout(function () {
        _this2.setState({
          showOptions: false
        });
      }, 500);
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      return this.state.selectedValue;
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        {
          className: 'select ' + (this.props.className || ''),
          onClick: this.onClick,
          onMouseEnter: this.onMouseEnter,
          onMouseLeave: this.onMouseLeave
        },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'row__cell select__selected-text' },
            this.state.selectedText
          ),
          _react2.default.createElement(
            'div',
            { className: 'row__cell row__cell--fixed' },
            _react2.default.createElement('span', { className: 'icon icon--dropdown-arrow icon--clickable' })
          )
        ),
        _react2.default.createElement(
          _ReactCSSTransitionGroup2.default,
          { transitionName: 'fadeIn', transitionEnter: true, transitionEnterTimeout: 200, transitionLeaveTimeout: 200 },
          this.renderOptions()
        )
      );
    }
  }, {
    key: 'renderOptions',
    value: function renderOptions() {
      var _this3 = this;

      if (this.state.showOptions) {
        var options = this.props.options.map(function (option) {
          return _react2.default.createElement(_DropdownSelectOption2.default, { value: option.value, text: option.text, key: option.id, callback: _this3.onOptionClick });
        });

        return _react2.default.createElement(
          'div',
          { className: 'select__options ' + (this.props.alignRight ? 'select__options--right' : '') },
          options
        );
      }
      return undefined;
    }
  }]);
  return DropdownSelect;
}(_react2.default.Component);

DropdownSelect.propTypes = {
  options: _react2.default.PropTypes.array.isRequired,
  className: _react2.default.PropTypes.string,
  alignRight: _react2.default.PropTypes.bool,
  onClick: _react2.default.PropTypes.func
};
DropdownSelect.defaultProps = {
  options: [],
  alignRight: false
};
exports.default = DropdownSelect;