'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _MultiSelectItem = require('./MultiSelectItem');

var _MultiSelectItem2 = _interopRequireDefault(_MultiSelectItem);

var _Checkbox = require('./Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MultiSelect = function (_React$Component) {
  (0, _inherits3.default)(MultiSelect, _React$Component);

  function MultiSelect() {
    var _ref;

    (0, _classCallCheck3.default)(this, MultiSelect);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = MultiSelect.__proto__ || (0, _getPrototypeOf2.default)(MultiSelect)).call.apply(_ref, [this].concat(args)));

    _this.onCheckAll = _this.onCheckAll.bind(_this);
    _this.onItemChange = _this.onItemChange.bind(_this);
    _this.onSearchChange = _this.onSearchChange.bind(_this);
    _this.state = {};
    return _this;
  }

  (0, _createClass3.default)(MultiSelect, [{
    key: 'onCheckAll',
    value: function onCheckAll() {
      var visibleItems = this.getVisibleItems();
      var allChecked = this.getAllChecked(visibleItems);
      this.changeItems(visibleItems, !allChecked);
    }
  }, {
    key: 'onItemChange',
    value: function onItemChange(searchItem) {
      var items = this.getVisibleItems();
      var item = items.find(function (eachItem) {
        return eachItem.value === searchItem.value;
      });
      if (item) {
        this.changeItems([item], !item.checked);
      }
    }
  }, {
    key: 'onSearchChange',
    value: function onSearchChange(evt) {
      this.setState({
        search: evt.target.value.toLowerCase()
      });
    }
  }, {
    key: 'getAllChecked',
    value: function getAllChecked(items) {
      return items.every(function (item) {
        return item.checked;
      });
    }
  }, {
    key: 'getVisibleItems',
    value: function getVisibleItems() {
      var _this2 = this;

      var items = this.props.items;
      if (this.state.search) {
        items = items.filter(function (item) {
          return item.text.toLowerCase().indexOf(_this2.state.search) !== -1;
        });
      }
      return items;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var visibleItems = this.getVisibleItems();
      var allChecked = this.getAllChecked(visibleItems);
      var items = visibleItems.map(function (item) {
        return _react2.default.createElement(_MultiSelectItem2.default, {
          groupName: _this3.props.name,
          item: item,
          onChange: _this3.onItemChange,
          key: item.value
        });
      });

      return _react2.default.createElement(
        'div',
        { className: 'multi-select' },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'column small-2' },
            _react2.default.createElement(_Checkbox2.default, {
              id: this.props.name + '_check_all',
              checked: allChecked,
              onChange: this.onCheckAll,
              label: 'Check All'
            })
          ),
          this.props.isSearchable ? _react2.default.createElement(
            'div',
            { className: 'column small-auto' },
            _react2.default.createElement('input', { type: 'text', placeholder: 'Search', onChange: this.onSearchChange })
          ) : undefined
        ),
        _react2.default.createElement(
          'div',
          {
            className: 'multi-select__items',
            ref: function ref(n) {
              return _this3.itemsList = n;
            }
          },
          items
        )
      );
    }
  }, {
    key: 'changeItems',
    value: function changeItems(items, newValue) {
      var newItems = this.props.items.map(function (item) {
        if (items.indexOf(item) !== -1) {
          return (0, _extends3.default)({}, item, { checked: newValue });
        }
        return item;
      });

      this.props.onChange(newItems);
    }
  }]);
  return MultiSelect;
}(_react2.default.Component);

MultiSelect.propTypes = {
  name: _react2.default.PropTypes.string.isRequired,
  items: _react2.default.PropTypes.array.isRequired,
  onChange: _react2.default.PropTypes.func,
  isSearchable: _react2.default.PropTypes.bool
};
MultiSelect.defaultProps = {
  items: []
};
exports.default = MultiSelect;