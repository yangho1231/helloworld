'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _from = require('babel-runtime/core-js/array/from');

var _from2 = _interopRequireDefault(_from);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Dropdown = require('./Dropdown');

var _Dropdown2 = _interopRequireDefault(_Dropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hoursList = (0, _from2.default)({ length: 12 }, function (v, k) {
  return k + 1;
});
var minutesList = (0, _from2.default)({ length: 60 }, function (v, k) {
  return k;
});
var hours = hoursList.map(function (hour) {
  var time = {};
  time.hour = hour < 10 ? '0' + hour : hour;
  time.value = time.hour;
  return time;
});

var minutes = minutesList.map(function (minute) {
  var time = {};
  time.minute = minute < 10 ? '0' + minute : minute;
  time.value = time.minute;
  return time;
});

var DateTimePickerClock = function (_React$Component) {
  (0, _inherits3.default)(DateTimePickerClock, _React$Component);

  function DateTimePickerClock() {
    var _ref;

    (0, _classCallCheck3.default)(this, DateTimePickerClock);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = DateTimePickerClock.__proto__ || (0, _getPrototypeOf2.default)(DateTimePickerClock)).call.apply(_ref, [this].concat(args)));

    _this.state = {
      date: _this.props.date,
      hour: _this.props.date.format('hh'),
      minute: _this.props.date.minute(),
      meridiem: _this.props.date.format('a')
    };
    _this.onMeridiemChange = _this.onMeridiemChange.bind(_this);
    _this.onHourDropdownChange = _this.onHourDropdownChange.bind(_this);
    _this.onMinuteDropdownChange = _this.onMinuteDropdownChange.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(DateTimePickerClock, [{
    key: 'onMeridiemChange',
    value: function onMeridiemChange(e) {
      var meridiem = e.target.value;
      var strHour = this.state.hour.toString();
      var hour = void 0;
      var newDate = void 0;
      if (meridiem === 'pm' && strHour !== '12') {
        hour = parseInt(this.state.hour, 10) + 12;
        newDate = this.state.date.hour(hour);
      } else if (meridiem === 'am' && strHour === '12') {
        hour = 0;
        newDate = this.state.date.hour(hour);
      } else {
        hour = parseInt(this.state.hour, 10);
        newDate = this.state.date.hour(hour);
      }
      this.setState({
        meridiem: meridiem,
        date: newDate
      }, this.props.onChange(newDate));
    }
  }, {
    key: 'onHourDropdownChange',
    value: function onHourDropdownChange(hour) {
      var newDate = void 0;
      var newHour = void 0;
      var meridiem = this.state.meridiem;
      if (meridiem === 'pm') {
        newHour = parseInt(hour, 10) + 12;
        newDate = this.state.date.hour(newHour);
      } else {
        newHour = parseInt(hour, 10);
        newDate = this.state.date.hour(newHour);
      }
      this.setState({
        hour: hour,
        date: newDate
      }, this.props.onChange(newDate));
    }
  }, {
    key: 'onMinuteDropdownChange',
    value: function onMinuteDropdownChange(minute) {
      var newDate = this.state.date.minute(minute);
      this.setState({
        minute: minute,
        date: newDate
      }, this.props.onChange(newDate));
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'post-scheduler__clock' },
        _react2.default.createElement(_Dropdown2.default, {
          defaultText: this.state.hour,
          value: this.state.hour,
          onChange: this.onHourDropdownChange,
          options: hours,
          textKey: 'hour',
          valueKey: 'value',
          className: 'dropdown-small dropdown-inline'
        }),
        _react2.default.createElement(_Dropdown2.default, {
          defaultText: this.pad10(this.state.minute),
          value: this.state.minute,
          onChange: this.onMinuteDropdownChange,
          options: minutes,
          textKey: 'minute',
          valueKey: 'value',
          className: 'dropdown-small dropdown-inline'
        }),
        _react2.default.createElement(
          'ul',
          null,
          _react2.default.createElement(
            'li',
            null,
            _react2.default.createElement('input', {
              type: 'radio',
              name: 'schedule-meridiem',
              id: 'schedule-meridiem--am',
              value: 'am',
              checked: this.state.meridiem === 'am',
              onChange: this.onMeridiemChange
            }),
            _react2.default.createElement(
              'label',
              { htmlFor: 'schedule-meridiem--am' },
              'am'
            )
          ),
          _react2.default.createElement(
            'li',
            null,
            _react2.default.createElement('input', {
              type: 'radio',
              name: 'schedule-meridiem',
              id: 'schedule-meridiem--pm',
              value: 'pm',
              checked: this.state.meridiem === 'pm',
              onChange: this.onMeridiemChange
            }),
            _react2.default.createElement(
              'label',
              { htmlFor: 'schedule-meridiem--pm' },
              'pm'
            )
          )
        )
      );
    }
  }, {
    key: 'pad10',
    value: function pad10(num) {
      return num < 10 ? '0' + num : num;
    }
  }]);
  return DateTimePickerClock;
}(_react2.default.Component);

DateTimePickerClock.propTypes = {
  date: _react2.default.PropTypes.object,
  onChange: _react2.default.PropTypes.func.isRequired
};
exports.default = DateTimePickerClock;