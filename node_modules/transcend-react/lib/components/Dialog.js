'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ReactCSSTransitionGroup = require('react/lib/ReactCSSTransitionGroup');

var _ReactCSSTransitionGroup2 = _interopRequireDefault(_ReactCSSTransitionGroup);

var _WaitIndicator = require('./WaitIndicator');

var _WaitIndicator2 = _interopRequireDefault(_WaitIndicator);

var _Modal = require('./Modal');

var _Modal2 = _interopRequireDefault(_Modal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Dialog = function (_React$Component) {
  (0, _inherits3.default)(Dialog, _React$Component);

  function Dialog(props, context) {
    (0, _classCallCheck3.default)(this, Dialog);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Dialog.__proto__ || (0, _getPrototypeOf2.default)(Dialog)).call(this, props, context));

    _this.onButtonClick = _this.onButtonClick.bind(_this);

    _this.state = {
      displayWaitIndicator: false,
      isDisplayed: false
    };
    return _this;
  }

  (0, _createClass3.default)(Dialog, [{
    key: 'onButtonClick',
    value: function onButtonClick(button, evt) {
      var _this2 = this;

      if (evt && evt.preventDefault) {
        evt.preventDefault();
      }
      var process = function process() {
        if (_this2.props.onButtonClick) {
          _this2.props.onButtonClick(button);
        }
      };

      if (button.displayWaitIndicator) {
        this.setState({
          displayWaitIndicator: true
        }, process);
      } else {
        process();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _ReactCSSTransitionGroup2.default,
        {
          transitionName: 'fadeIn',
          transitionAppear: true,
          transitionAppearTimeout: 200,
          transitionEnterTimeout: 200,
          transitionLeave: true,
          transitionLeaveTimeout: 200
        },
        _react2.default.createElement(
          _Modal2.default,
          { className: ['dialog', this.props.className].join(' '), onShadowClick: this.props.onShadowClick, onCloseClick: this.props.onCloseClick },
          _react2.default.createElement(
            'h2',
            null,
            this.props.title
          ),
          _react2.default.createElement(
            'p',
            null,
            this.props.text
          ),
          this.props.children,
          this.renderButtonBox()
        )
      );
    }
  }, {
    key: 'renderButtonBox',
    value: function renderButtonBox() {
      if (this.props.buttons) {
        return _react2.default.createElement(
          'div',
          { className: 'breathe' },
          this.state.displayWaitIndicator ? _react2.default.createElement(_WaitIndicator2.default, { centered: false }) : this.renderButtons()
        );
      }
      return undefined;
    }
  }, {
    key: 'renderButtons',
    value: function renderButtons() {
      var _this3 = this;

      /* eslint-disable react/jsx-no-bind */
      return (this.props.buttons || []).map(function (button, i) {
        var classNames = ['button'];
        if (button.className) {
          classNames.push(button.className);
        }
        return _react2.default.createElement(
          'button',
          { key: i, className: classNames.join(' '), onClick: _this3.onButtonClick.bind(_this3, button) },
          button.text || button.title
        );
      });
    }
  }]);
  return Dialog;
}(_react2.default.Component);

Dialog.propTypes = {
  buttons: _react2.default.PropTypes.array,
  children: _react2.default.PropTypes.node,
  className: _react2.default.PropTypes.string,
  onButtonClick: _react2.default.PropTypes.func,
  onCloseClick: _react2.default.PropTypes.func,
  onShadowClick: _react2.default.PropTypes.func,
  text: _react2.default.PropTypes.string.isRequired,
  title: _react2.default.PropTypes.string.isRequired
};
exports.default = Dialog;