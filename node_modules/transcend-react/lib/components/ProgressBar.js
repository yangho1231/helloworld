'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProgressBar = function (_Component) {
  (0, _inherits3.default)(ProgressBar, _Component);

  function ProgressBar() {
    (0, _classCallCheck3.default)(this, ProgressBar);
    return (0, _possibleConstructorReturn3.default)(this, (ProgressBar.__proto__ || (0, _getPrototypeOf2.default)(ProgressBar)).apply(this, arguments));
  }

  (0, _createClass3.default)(ProgressBar, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'progress-bar ' + this.checkForWarning() + ' ' + (this.props.className || '') },
        _react2.default.createElement('div', { className: 'progress-bar__colored-bar', style: { width: this.props.percentComplete + '%' } }),
        _react2.default.createElement(
          'span',
          { className: 'text px-small' },
          this.props.text
        )
      );
    }
  }, {
    key: 'checkForWarning',
    value: function checkForWarning() {
      if (this.props.lowerLimitWarning !== undefined && this.props.percentComplete < this.props.lowerLimitWarning) {
        return 'progress-bar--warning';
      } else if (this.props.upperLimitWarning !== undefined && this.props.percentComplete >= this.props.upperLimitWarning) {
        return 'progress-bar--warning';
      } else return '';
    }
  }]);
  return ProgressBar;
}(_react.Component);

ProgressBar.propTypes = {
  text: _react.PropTypes.string,
  percentComplete: _react.PropTypes.number,
  className: _react.PropTypes.string,
  lowerLimitWarning: _react.PropTypes.number,
  upperLimitWarning: _react.PropTypes.number
};
exports.default = ProgressBar;