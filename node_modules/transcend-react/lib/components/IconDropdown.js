'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ReactCSSTransitionGroup = require('react/lib/ReactCSSTransitionGroup');

var _ReactCSSTransitionGroup2 = _interopRequireDefault(_ReactCSSTransitionGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IconDropdown = function (_Component) {
  (0, _inherits3.default)(IconDropdown, _Component);

  function IconDropdown() {
    var _ref;

    (0, _classCallCheck3.default)(this, IconDropdown);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = IconDropdown.__proto__ || (0, _getPrototypeOf2.default)(IconDropdown)).call.apply(_ref, [this].concat(args)));

    _this.onIconClick = _this.onIconClick.bind(_this);
    _this.onScrimClick = _this.onScrimClick.bind(_this);
    _this.onContainerClick = _this.onContainerClick.bind(_this);
    _this.state = {};
    return _this;
  }

  (0, _createClass3.default)(IconDropdown, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.timeout) {
        window.clearTimeout(this.timeout);
      }
    }
  }, {
    key: 'onIconClick',
    value: function onIconClick(evt) {
      evt.preventDefault();
      this.setState({
        showDropdown: true
      });
    }
  }, {
    key: 'onScrimClick',
    value: function onScrimClick(evt) {
      evt.preventDefault();
      this.setState({
        showDropdown: false
      });
    }
  }, {
    key: 'onContainerClick',
    value: function onContainerClick() {
      var _this2 = this;

      this.timeout = window.setTimeout(function () {
        _this2.setState({
          showDropdown: false
        });
      }, 300);
    }
  }, {
    key: 'render',
    value: function render() {
      var Icon = this.props.icon;
      return _react2.default.createElement(
        'span',
        { className: 'icon-dropdown' },
        _react2.default.createElement(
          'a',
          { className: 'icon-dropdown__link', tabIndex: '0', onClick: this.onIconClick },
          _react2.default.createElement(Icon, { className: this.props.className })
        ),
        _react2.default.createElement(
          _ReactCSSTransitionGroup2.default,
          {
            transitionName: 'fadeIn',
            transitionEnter: true,
            transitionEnterTimeout: 200,
            transitionLeaveTimeout: 200
          },
          this.renderDropdown()
        )
      );
    }
  }, {
    key: 'renderDropdown',
    value: function renderDropdown() {
      if (this.state.showDropdown) {
        return _react2.default.createElement(
          'div',
          { className: 'icon-dropdown__dropdown' },
          _react2.default.createElement('div', { className: 'icon-dropdown__scrim scrim', onClick: this.onScrimClick }),
          _react2.default.createElement(
            'ul',
            { className: 'icon-dropdown__list', onClick: this.onContainerClick },
            this.renderChildren()
          )
        );
      }
      return undefined;
    }
  }, {
    key: 'renderChildren',
    value: function renderChildren() {
      return _react2.default.Children.map(this.props.children, function (child, i) {
        return _react2.default.createElement(
          'li',
          { key: i },
          child
        );
      });
    }
  }]);
  return IconDropdown;
}(_react.Component);

IconDropdown.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  icon: _react.PropTypes.any.isRequired
};
IconDropdown.defaultProps = {
  icon: 'i'
};
exports.default = IconDropdown;