'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ReactCSSTransitionGroup = require('react/lib/ReactCSSTransitionGroup');

var _ReactCSSTransitionGroup2 = _interopRequireDefault(_ReactCSSTransitionGroup);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _DropdownSelectOption = require('./DropdownSelectOption');

var _DropdownSelectOption2 = _interopRequireDefault(_DropdownSelectOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Dropdown = function (_React$Component) {
  (0, _inherits3.default)(Dropdown, _React$Component);

  function Dropdown(props, context) {
    (0, _classCallCheck3.default)(this, Dropdown);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Dropdown.__proto__ || (0, _getPrototypeOf2.default)(Dropdown)).call(this, props, context));

    _this.state = {
      showOptions: false
    };
    _this.renderDropdownOption = _this.renderDropdownOption.bind(_this);
    _this.onBlur = _this.onBlur.bind(_this);
    _this.onFocus = _this.onFocus.bind(_this);
    _this.onMouseDown = _this.onMouseDown.bind(_this);
    _this.onMouseMove = _this.onMouseMove.bind(_this);
    _this.onMouseLeave = _this.onMouseLeave.bind(_this);
    _this.onKeyDown = _this.onKeyDown.bind(_this);
    _this.onOptionSelect = _this.onOptionSelect.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Dropdown, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.clearTimeout(this.mouseLeaveTimeout);
    }
  }, {
    key: 'onMouseDown',
    value: function onMouseDown() {
      this.setState({
        showOptions: !this.state.showOptions,
        highlightedIndex: -1
      });
    }
  }, {
    key: 'onOptionSelect',
    value: function onOptionSelect(value) {
      this.setValue(value);
    }
  }, {
    key: 'onMouseMove',
    value: function onMouseMove() {
      if (this.state.showOptions && this.mouseLeaveTimeout) {
        window.clearTimeout(this.mouseLeaveTimeout);
        delete this.mouseLeaveTimeout;
      }
    }
  }, {
    key: 'onMouseLeave',
    value: function onMouseLeave() {
      var _this2 = this;

      if (this.state.showOptions) {
        this.mouseLeaveTimeout = window.setTimeout(function () {
          if (_this2.node) {
            _this2.node.blur();
          }
        }, 500);
      }
    }
  }, {
    key: 'onFocus',
    value: function onFocus() {
      this.setState({
        showOptions: true,
        highlightedIndex: -1
      });
    }
  }, {
    key: 'onBlur',
    value: function onBlur() {
      this.setState({
        showOptions: false,
        highlightedIndex: -1
      });
    }
  }, {
    key: 'onKeyDown',
    value: function onKeyDown(evt) {
      if (this.state.showOptions) {
        if (evt.keyCode === 40) {
          // down
          var highlightedIndex = this.state.highlightedIndex + 1;
          if (highlightedIndex >= this.props.options.length) {
            highlightedIndex = 0;
          }
          this.setState({
            highlightedIndex: highlightedIndex
          });
        } else if (evt.keyCode === 38) {
          // up
          var _highlightedIndex = this.state.highlightedIndex - 1;
          if (_highlightedIndex < -1) {
            _highlightedIndex = this.props.options.length - 1;
          }
          this.setState({
            highlightedIndex: _highlightedIndex
          });
        } else if (evt.keyCode === 27) {
          // escape
          this.setState({
            showOptions: false
          });
        } else if (evt.keyCode === 8) {
          // back
          evt.preventDefault();
        } else if (evt.keyCode === 13) {
          if (this.state.highlightedIndex > -1) {
            this.setValue(this.props.options[this.state.highlightedIndex]);
          }
        }
      } else if (evt.keyCode === 38 || evt.keyCode === 40) {
        this.setState({
          showOptions: true,
          highlightedIndex: 0
        });
      }
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      var _this3 = this;

      this.setState({
        showOptions: false
      }, function () {
        if (_this3.props.valueKey) {
          _this3.props.onChange(value[_this3.props.valueKey]);
        } else {
          _this3.props.onChange(value);
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var value = this.props.value;
      if (value === undefined) {
        value = {};
      }
      if (this.props.valueKey) {
        value = _lodash2.default.find(this.props.options, (0, _defineProperty3.default)({}, this.props.valueKey, value)) || {};
      }
      return _react2.default.createElement(
        'div',
        {
          id: this.props.id,
          tabIndex: this.props.tabIndex || 0,
          className: 'dropdown ' + (this.props.className || ''),
          onBlur: this.onBlur,
          onFocus: this.onFocus,
          onMouseDown: this.onMouseDown,
          onMouseMove: this.onMouseMove,
          onMouseLeave: this.onMouseLeave,
          onKeyDown: this.onKeyDown,
          ref: function ref(n) {
            return _this4.node = n;
          }
        },
        _react2.default.createElement(
          'div',
          { className: 'dropdown__container' },
          this.renderSelectedText(value),
          _react2.default.createElement('div', { className: 'dropdown__arrow' })
        ),
        _react2.default.createElement(
          _ReactCSSTransitionGroup2.default,
          { transitionName: 'fadeIn', transitionEnter: true, transitionEnterTimeout: 200, transitionLeaveTimeout: 200 },
          this.renderOptions()
        )
      );
    }
  }, {
    key: 'renderSelectedText',
    value: function renderSelectedText(value) {
      if (value && value[this.props.textKey]) {
        return _react2.default.createElement(
          'div',
          { className: 'dropdown__selected-text' },
          value[this.props.textKey]
        );
      }
      return _react2.default.createElement(
        'div',
        { className: 'dropdown__selected-text dropdown__selected-text--default' },
        this.props.defaultText
      );
    }
  }, {
    key: 'renderOptions',
    value: function renderOptions() {
      if (this.state.showOptions) {
        var className = ['dropdown__options'];
        if (this.props.alignRight) {
          className.push('dropdown__options--right');
        }

        return _react2.default.createElement(
          'div',
          { className: className.join(' ') },
          this.props.options.map(this.renderDropdownOption)
        );
      }
      return undefined;
    }
  }, {
    key: 'renderDropdownOption',
    value: function renderDropdownOption(option, i) {
      return _react2.default.createElement(_DropdownSelectOption2.default, {
        highlighted: i === this.state.highlightedIndex,
        value: option,
        text: option[this.props.textKey],
        key: i,
        onSelect: this.onOptionSelect
      });
    }
  }]);
  return Dropdown;
}(_react2.default.Component);

Dropdown.propTypes = {
  alignRight: _react2.default.PropTypes.bool,
  className: _react2.default.PropTypes.string,
  defaultText: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]),
  id: _react2.default.PropTypes.string,
  onChange: _react2.default.PropTypes.func.isRequired,
  options: _react2.default.PropTypes.array.isRequired,
  tabIndex: _react2.default.PropTypes.number,
  textKey: _react2.default.PropTypes.string,
  value: _react2.default.PropTypes.any,
  valueKey: _react2.default.PropTypes.string
};
Dropdown.defaultProps = {
  textKey: 'text',
  options: []
};
exports.default = Dropdown;