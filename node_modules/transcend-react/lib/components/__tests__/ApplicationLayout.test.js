'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactTestRenderer = require('react-test-renderer');

var _reactTestRenderer2 = _interopRequireDefault(_reactTestRenderer);

var _ApplicationLayout = require('../ApplicationLayout');

var _ApplicationLayout2 = _interopRequireDefault(_ApplicationLayout);

var _MockRouterContext = require('../../../__mocks__/MockRouterContext');

var _MockRouterContext2 = _interopRequireDefault(_MockRouterContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

jest.mock('react-dom');
describe('ApplicationLayout.js', function () {
  it('should match base render', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(
      _MockRouterContext2.default,
      null,
      _react2.default.createElement(
        _ApplicationLayout2.default,
        {
          location: {},
          params: {},
          currentUser: {},
          currentPosition: {}
        },
        _react2.default.createElement(
          'h1',
          null,
          'hi'
        )
      )
    )).toJSON();
    expect(tree).toMatchSnapshot();
  });

  it('should render audiences when hasAudiencesAccess', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(
      _MockRouterContext2.default,
      null,
      _react2.default.createElement(
        _ApplicationLayout2.default,
        {
          location: {},
          params: {},
          currentUser: {},
          currentPosition: {},
          currentCompany: {
            name: 'company',
            has_audiences_access: true
          }
        },
        _react2.default.createElement(
          'h1',
          null,
          'hi'
        )
      )
    )).toJSON();
    expect(tree).toMatchSnapshot();
  });

  it('should render no company slug', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(
      _MockRouterContext2.default,
      null,
      _react2.default.createElement(
        _ApplicationLayout2.default,
        {
          location: {},
          params: {},
          currentUser: {},
          currentPosition: {}
        },
        _react2.default.createElement(
          'h1',
          null,
          'hi'
        )
      )
    )).toJSON();
    expect(tree).toMatchSnapshot();
  });

  it('should render company slug', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(
      _MockRouterContext2.default,
      null,
      _react2.default.createElement(
        _ApplicationLayout2.default,
        {
          location: {},
          params: {},
          currentUser: {},
          currentPosition: {},
          currentCompany: {
            name: 'company',
            has_audiences_access: true,
            slug: 'my-company-slug'
          }
        },
        _react2.default.createElement(
          'h1',
          null,
          'hi'
        )
      )
    )).toJSON();
    expect(tree).toMatchSnapshot();
  });

  it('should render admin link', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(
      _MockRouterContext2.default,
      null,
      _react2.default.createElement(
        _ApplicationLayout2.default,
        {
          location: {},
          params: {},
          currentUser: {},
          currentPosition: {
            is_super_admin: true
          }
        },
        _react2.default.createElement(
          'h1',
          null,
          'hi'
        )
      )
    )).toJSON();
    expect(tree).toMatchSnapshot();
  });
});