'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _FlashNotification = require('../FlashNotification');

var _FlashNotification2 = _interopRequireDefault(_FlashNotification);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

jest.useFakeTimers();

describe('FlashNotification.js', function () {
  var wrapper = void 0;
  var type = 'success';
  var message = 'Are you sure?';
  var duration = 3000;

  beforeEach(function () {
    wrapper = (0, _enzyme.mount)(_react2.default.createElement(_FlashNotification2.default, {
      type: type,
      message: message,
      duration: duration
    }));
  });

  it('should match base render', function () {
    expect(wrapper.find('.flash__container')).toHaveLength(1);
  });

  it('should be hidden to start', function () {
    expect(wrapper.find('.flash__container').at(0).prop('style').display).toEqual('none');
  });

  it('should pass props', function () {
    expect(wrapper.prop('type')).toEqual(type);
    expect(wrapper.prop('message')).toEqual(message);
    expect(wrapper.prop('duration')).toEqual(duration);
  });

  it('should show with correct class when show is true', function () {
    expect(wrapper.find('.flash--' + type).length).toEqual(0);

    wrapper.setState({ show: true });

    expect(wrapper.find('.flash--' + type).length).toEqual(1);
  });

  it('should disappear after duration has expired', function () {
    wrapper.setProps({ onClose: jest.fn() });
    wrapper.setState({ show: true });
    expect(wrapper.find('.flash--' + type).length).toEqual(1);

    jest.runAllTimers();

    expect(wrapper.state('show')).toEqual(false);
    expect(wrapper.find('.flash--' + type).length).toEqual(0);
  });

  it('should close when close icon clicked', function () {
    wrapper.setProps({ onClose: jest.fn() });

    wrapper.setState({ show: true });
    expect(wrapper.find('.flash--' + type).length).toEqual(1);

    wrapper.find('.flash__close').simulate('click');

    expect(wrapper.prop('onClose')).toHaveBeenCalledTimes(1);
    expect(wrapper.state('show')).toEqual(false);

    jest.runAllTimers();

    expect(wrapper.find('.flash--' + type).length).toEqual(0);
  });

  it('should handle deprecated FlashNotification props', function () {
    var depType = 'success';
    var depMessage = 'Your success message.';
    wrapper.setProps({ type: '', message: '', flash: [[depType, depMessage]] });
    wrapper.setState({ show: true });
    expect(wrapper.find('.flash--' + depType).length).toEqual(1);
    expect(wrapper.find('.flash--' + depType).text()).toEqual(depMessage);
  });
});