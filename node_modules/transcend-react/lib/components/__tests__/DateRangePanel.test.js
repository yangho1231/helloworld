'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactTestRenderer = require('react-test-renderer');

var _reactTestRenderer2 = _interopRequireDefault(_reactTestRenderer);

var _mockdate = require('mockdate');

var _mockdate2 = _interopRequireDefault(_mockdate);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _DateRangePanel = require('../DateRangePanel');

var _DateRangePanel2 = _interopRequireDefault(_DateRangePanel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

jest.mock('react-dom');

var date = _mockdate2.default.set('1/1/2016');

describe('DateRangePanel.js', function () {
  it('should match base render', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(_DateRangePanel2.default, { onChange: function onChange(n) {
        return n;
      }, startDate: date, endDate: date }));
    var json = tree.toJSON();
    expect(json).toMatchSnapshot();
  });

  it('should show cancel button when on hide is showing and theres a showInputs', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(_DateRangePanel2.default, { onChange: function onChange(n) {
        return n;
      }, startDate: date, endDate: date, onHide: function onHide(n) {
        return n;
      }, showInputs: true }));
    var json = tree.toJSON();
    expect(json).toMatchSnapshot();
  });

  it('should work with moment', function () {
    var momDate = (0, _moment2.default)('2016-01-01');
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(_DateRangePanel2.default, { onChange: function onChange(n) {
        return n;
      }, startDate: momDate, endDate: momDate.clone().add(1, 'day') }));
    var json = tree.toJSON();
    expect(json).toMatchSnapshot();
  });
});