'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactTestRenderer = require('react-test-renderer');

var _reactTestRenderer2 = _interopRequireDefault(_reactTestRenderer);

var _ProgressBar = require('../ProgressBar');

var _ProgressBar2 = _interopRequireDefault(_ProgressBar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

jest.mock('react-dom');
jest.mock('react-dom/lib/ReactDOMComponentTree');
describe('ProgressBar.js', function () {
  it('lower limit should not trigger warning', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(_ProgressBar2.default, { percentComplete: 80, lowerLimitWarning: 30, text: 'my text' }));
    var json = tree.toJSON();
    expect(json).toMatchSnapshot();
  });
  it('lower limit should display warning', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(_ProgressBar2.default, { percentComplete: 20, lowerLimitWarning: 30, text: 'my text' }));
    var json = tree.toJSON();
    expect(json).toMatchSnapshot();
  });
  it('upper limit should not display warning', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(_ProgressBar2.default, { percentComplete: 20, upperLimitWarning: 30, text: 'my text' }));
    var json = tree.toJSON();
    expect(json).toMatchSnapshot();
  });
  it('upper limit should display warning', function () {
    var tree = _reactTestRenderer2.default.create(_react2.default.createElement(_ProgressBar2.default, { percentComplete: 60, upperLimitWarning: 30, text: 'my text' }));
    var json = tree.toJSON();
    expect(json).toMatchSnapshot();
  });
});