'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ReactCSSTransitionGroup = require('react/lib/ReactCSSTransitionGroup');

var _ReactCSSTransitionGroup2 = _interopRequireDefault(_ReactCSSTransitionGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ComposableDropdown = function (_React$Component) {
  (0, _inherits3.default)(ComposableDropdown, _React$Component);

  function ComposableDropdown(props, context) {
    (0, _classCallCheck3.default)(this, ComposableDropdown);

    var _this = (0, _possibleConstructorReturn3.default)(this, (ComposableDropdown.__proto__ || (0, _getPrototypeOf2.default)(ComposableDropdown)).call(this, props, context));

    _this.state = {
      showContent: false
    };
    _this.onMouseDown = _this.onMouseDown.bind(_this);
    _this.onBlur = _this.onBlur.bind(_this);
    _this.onFocus = _this.onFocus.bind(_this);
    _this.onMouseMove = _this.onMouseMove.bind(_this);
    _this.onMouseLeave = _this.onMouseLeave.bind(_this);
    _this.onChildMouseDown = _this.onChildMouseDown.bind(_this);
    _this.onChildMouseLeave = _this.onChildMouseLeave.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(ComposableDropdown, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.clearTimeout(this.mouseLeaveTimeout);
    }
  }, {
    key: 'onMouseDown',
    value: function onMouseDown() {
      this.setState({
        showContent: !this.state.showContent
      });
    }
  }, {
    key: 'onChildMouseDown',
    value: function onChildMouseDown(evt) {
      // don't let child clicks close dropdown
      evt.stopPropagation();
    }
  }, {
    key: 'onMouseMove',
    value: function onMouseMove() {
      if (this.state.showContent && this.mouseLeaveTimeout) {
        window.clearTimeout(this.mouseLeaveTimeout);
        delete this.mouseLeaveTimeout;
      }
    }
  }, {
    key: 'onChildMouseLeave',
    value: function onChildMouseLeave() {
      if (this.node) {
        this.node.focus();
      }
    }
  }, {
    key: 'onMouseLeave',
    value: function onMouseLeave() {
      var _this2 = this;

      if (this.state.showContent) {
        this.mouseLeaveTimeout = window.setTimeout(function () {
          if (_this2.node) {
            _this2.node.blur();
          }
        }, 500);
      }
    }
  }, {
    key: 'onFocus',
    value: function onFocus() {
      this.setState({
        showContent: true
      });
    }
  }, {
    key: 'onBlur',
    value: function onBlur(evt) {
      if (!evt.relatedTarget) {
        // top component blurred, go ahead and close
        this.setState({
          showContent: false
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var className = this.props.className || '';
      return _react2.default.createElement(
        'div',
        {
          className: 'dropdown ' + className,
          tabIndex: this.props.tabIndex || 0,
          onMouseDown: this.onMouseDown,
          onBlur: this.onBlur,
          onFocus: this.onFocus,
          onMouseMove: this.onMouseMove,
          onMouseLeave: this.onMouseLeave,
          ref: function ref(n) {
            return _this3.node = n;
          }
        },
        _react2.default.createElement(
          'div',
          {
            className: 'dropdown__container'
          },
          this.renderSelectedText(),
          _react2.default.createElement('div', { className: 'dropdown__arrow' })
        ),
        _react2.default.createElement(
          _ReactCSSTransitionGroup2.default,
          { transitionName: 'fadeIn', transitionEnter: true, transitionEnterTimeout: 200, transitionLeaveTimeout: 200 },
          this.renderChildren()
        )
      );
    }
  }, {
    key: 'renderSelectedText',
    value: function renderSelectedText() {
      var selectedText = this.props.selectedText || '';
      if (selectedText.length > 0) {
        return _react2.default.createElement(
          'div',
          { className: 'dropdown__selected-text' },
          selectedText
        );
      }
      return _react2.default.createElement(
        'div',
        { className: 'dropdown__selected-text dropdown__selected-text--default' },
        this.props.defaultText
      );
    }
  }, {
    key: 'renderChildren',
    value: function renderChildren() {
      if (this.state.showContent) {
        return _react2.default.createElement(
          'div',
          { className: 'dropdown__options', onMouseDown: this.onChildMouseDown, onMouseLeave: this.onChildMouseLeave },
          this.props.children
        );
      }
      return undefined;
    }
  }]);
  return ComposableDropdown;
}(_react2.default.Component);

ComposableDropdown.propTypes = {
  children: _react2.default.PropTypes.node,
  defaultText: _react2.default.PropTypes.string,
  selectedText: _react2.default.PropTypes.string,
  className: _react2.default.PropTypes.string,
  tabIndex: _react2.default.PropTypes.number
};
exports.default = ComposableDropdown;