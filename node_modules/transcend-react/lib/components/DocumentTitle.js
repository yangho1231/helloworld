'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_lodash2.default.templateSettings.interpolate = /{([\s\S]+?)}/g;

var DocumentTitle = function (_React$Component) {
  (0, _inherits3.default)(DocumentTitle, _React$Component);

  function DocumentTitle() {
    (0, _classCallCheck3.default)(this, DocumentTitle);
    return (0, _possibleConstructorReturn3.default)(this, (DocumentTitle.__proto__ || (0, _getPrototypeOf2.default)(DocumentTitle)).apply(this, arguments));
  }

  (0, _createClass3.default)(DocumentTitle, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return !_lodash2.default.isEqual(this.props, nextProps);
    }
  }, {
    key: 'getDocumentTitle',
    value: function getDocumentTitle() {
      if (this.props.template && this.props.data) {
        try {
          var title = _lodash2.default.template(this.props.template)(this.props.data || {});
          return title;
        } catch (e) {
          // in case the _.template throws an exception
        }
      }
      return this.props.title;
    }
  }, {
    key: 'render',
    value: function render() {
      window.document.title = this.getDocumentTitle() || this.props.loadingText;
      return _react2.default.createElement('span', { style: { display: 'none' } });
    }
  }]);
  return DocumentTitle;
}(_react2.default.Component);

DocumentTitle.propTypes = {
  data: _react2.default.PropTypes.object,
  loadingText: _react2.default.PropTypes.string,
  template: _react2.default.PropTypes.string,
  title: _react2.default.PropTypes.string
};
DocumentTitle.defaultProps = {
  loadingText: 'Loading...'
};
exports.default = DocumentTitle;