'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _DateRangePanel = require('./DateRangePanel');

var _DateRangePanel2 = _interopRequireDefault(_DateRangePanel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateRangePicker = function (_React$Component) {
  (0, _inherits3.default)(DateRangePicker, _React$Component);

  function DateRangePicker(props, context) {
    (0, _classCallCheck3.default)(this, DateRangePicker);

    var _this = (0, _possibleConstructorReturn3.default)(this, (DateRangePicker.__proto__ || (0, _getPrototypeOf2.default)(DateRangePicker)).call(this, props, context));

    _this.onShowSelectorClick = function () {
      _this.setState({
        showSelector: true
      });
    };

    _this.onPanelHide = function () {
      _this.setState({
        showSelector: false
      });
    };

    _this.onDateChange = function (dateRange) {
      _this.setState((0, _extends3.default)({}, dateRange), _this.notify);
    };

    _this.state = {
      startDate: (0, _moment2.default)(props.startDate).toDate(),
      endDate: (0, _moment2.default)(props.endDate).toDate(),
      preset: props.preset
    };
    return _this;
  }

  (0, _createClass3.default)(DateRangePicker, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        startDate: (0, _moment2.default)(nextProps.startDate).toDate(),
        endDate: (0, _moment2.default)(nextProps.endDate).toDate(),
        preset: nextProps.preset
      });
    }
  }, {
    key: 'getPrettyDate',
    value: function getPrettyDate(date) {
      if (this.props.showTime) {
        return (0, _moment2.default)(date).format(this.props.dateTimeFormat);
      } else {
        return (0, _moment2.default)(date).format(this.props.dateFormat);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: ['date-range-picker', this.props.className].join(' ') },
        _react2.default.createElement(
          'div',
          { className: 'date-range-picker__range', onClick: this.onShowSelectorClick },
          this.renderDates(),
          _react2.default.createElement('span', { className: 'icon icon--sm icon--dropdown-arrow' })
        ),
        this.renderDateSelector()
      );
    }
  }, {
    key: 'renderDates',
    value: function renderDates() {
      if (this.state.preset) {
        return _react2.default.createElement(
          'span',
          { className: 'date-range-picker__range__date date-range-picker__range__date--preset' },
          this.state.preset.name
        );
      } else {
        return _react2.default.createElement(
          'div',
          { className: 'date-range-picker__range__date grow' },
          _react2.default.createElement(
            'span',
            null,
            this.getPrettyDate(this.state.startDate)
          ),
          _react2.default.createElement(
            'span',
            { className: 'date-range-picker__range__dash' },
            ' - '
          ),
          _react2.default.createElement(
            'span',
            null,
            this.getPrettyDate(this.state.endDate)
          )
        );
      }
    }
  }, {
    key: 'renderDateSelector',
    value: function renderDateSelector() {
      if (this.state.showSelector) {
        return _react2.default.createElement(_DateRangePanel2.default, (0, _extends3.default)({}, this.props, this.state, {
          onHide: this.onPanelHide,
          onChange: this.onDateChange
        }));
      }
      return undefined;
    }
  }, {
    key: 'notify',
    value: function notify() {
      if (this.props.onChange) {
        this.props.onChange({
          startDate: this.state.startDate,
          endDate: this.state.endDate,
          preset: this.state.preset
        });
      }
    }
  }]);
  return DateRangePicker;
}(_react2.default.Component);

DateRangePicker.propTypes = {
  className: _react2.default.PropTypes.string,
  dateFormat: _react2.default.PropTypes.string,
  dateRangePresets: _react2.default.PropTypes.array,
  dateTimeFormat: _react2.default.PropTypes.string,
  endDate: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.object.isRequired, _react2.default.PropTypes.func.isRequired]),
  onChange: _react2.default.PropTypes.func,
  preset: _react2.default.PropTypes.object,
  presets: _react2.default.PropTypes.array,
  showInputs: _react2.default.PropTypes.bool,
  showTime: _react2.default.PropTypes.bool,
  startDate: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.object.isRequired, _react2.default.PropTypes.func.isRequired])
};
DateRangePicker.defaultProps = {
  dateFormat: 'MMM DD',
  dateTimeFormat: 'MMM DD h:mm a'
};
exports.default = DateRangePicker;