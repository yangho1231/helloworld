'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _DropdownChecklistContentItem = require('./DropdownChecklistContentItem');

var _DropdownChecklistContentItem2 = _interopRequireDefault(_DropdownChecklistContentItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DropdownChecklistContent = function (_React$Component) {
  (0, _inherits3.default)(DropdownChecklistContent, _React$Component);

  function DropdownChecklistContent(props, context) {
    (0, _classCallCheck3.default)(this, DropdownChecklistContent);

    var _this = (0, _possibleConstructorReturn3.default)(this, (DropdownChecklistContent.__proto__ || (0, _getPrototypeOf2.default)(DropdownChecklistContent)).call(this, props, context));

    _this.onSearchKeyUp = _this.onSearchKeyUp.bind(_this);
    _this.state = {
      visibleItems: _this.props.items.slice(0)
    };
    return _this;
  }

  (0, _createClass3.default)(DropdownChecklistContent, [{
    key: 'onSearchKeyUp',
    value: function onSearchKeyUp() {
      var _this2 = this;

      var prefix = this.searchText.value.toLowerCase();
      var visibleItems = this.props.items.filter(function (item) {
        var displayName = item[_this2.props.textKey];
        return displayName.toLowerCase().indexOf(prefix) !== -1;
      }, this);
      this.setState({
        visibleItems: visibleItems
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        'div',
        { className: 'dropdown-checklist__options' },
        _react2.default.createElement(
          'div',
          { className: 'dropdown-checklist__search' },
          _react2.default.createElement('input', {
            type: 'search',
            ref: function ref(n) {
              return _this3.searchText = n;
            },
            placeholder: 'Search Users',
            onInput: this.onSearchKeyUp,
            className: 'dropdown-checklist__search__input',
            autoFocus: true
          }),
          this.renderItemsList()
        )
      );
    }
  }, {
    key: 'renderItemsList',
    value: function renderItemsList() {
      return _react2.default.createElement(
        'div',
        { className: 'dropdown-checklist__items-list' },
        this.renderItems()
      );
    }
  }, {
    key: 'renderItems',
    value: function renderItems() {
      var _this4 = this;

      return this.state.visibleItems.map(function (item) {
        var findParams = {};
        findParams[_this4.props.valueKey] = item[_this4.props.valueKey];
        return _react2.default.createElement(_DropdownChecklistContentItem2.default, {
          key: item[_this4.props.valueKey],
          onChange: _this4.props.onChange,
          textKey: _this4.props.textKey,
          valueKey: _this4.props.valueKey,
          imageKey: _this4.props.imageKey,
          item: item,
          selected: _lodash2.default.findIndex(_this4.props.selectedItems, findParams) !== -1
        });
      }, this);
    }
  }]);
  return DropdownChecklistContent;
}(_react2.default.Component);

DropdownChecklistContent.propTypes = {
  items: _react2.default.PropTypes.array,
  selectedItems: _react2.default.PropTypes.array,
  onChange: _react2.default.PropTypes.func.isRequired,
  valueKey: _react2.default.PropTypes.string,
  textKey: _react2.default.PropTypes.string,
  imageKey: _react2.default.PropTypes.string
};
exports.default = DropdownChecklistContent;